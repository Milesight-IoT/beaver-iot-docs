{
  "openapi": "3.1.0",
  "info": {
    "title": "Beaver IoT",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [],
  "paths": {
    "/db-resource/{keyScope}/{keyIdentifier}": {
      "put": {
        "summary": "putResource",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "key_scope",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_identifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "getResource",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "key_scope",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_identifier",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": [
                      0
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/resource/upload-config": {
      "post": {
        "summary": "getResourceUploadConfig",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUploadConfig",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPreSignResult"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "upload_url": "",
                        "resource_url": "",
                        "key": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/integration/search": {
      "post": {
        "summary": "搜索集成searchIntegration",
        "deprecated": false,
        "description": "",
        "tags": ["integration"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchIntegrationRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyListSearchIntegrationResponseData"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": [
                        {
                          "id": "",
                          "icon": "",
                          "name": "",
                          "description": "",
                          "add_device_service_key": "",
                          "device_count": 0,
                          "entity_count": 0
                        }
                      ],
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/integration/{integrationId}": {
      "get": {
        "summary": "获取集成详情getIntegrationDetail",
        "deprecated": false,
        "description": "",
        "tags": ["integration"],
        "parameters": [
          {
            "name": "integration_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyIntegrationDetailData"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "icon": "",
                        "name": "",
                        "description": "",
                        "add_device_service_key": "",
                        "device_count": 0,
                        "entity_count": 0,
                        "delete_device_service_key": "",
                        "integration_entities": [
                          {
                            "id": "",
                            "key": "",
                            "name": "",
                            "type": "",
                            "value_attribute": {
                              "key": {}
                            },
                            "value_type": "",
                            "access_mod": "",
                            "parent": "",
                            "value": {},
                            "description": ""
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/credentials": {
      "get": {
        "summary": "searchCredentials",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "sorts[0].direction",
            "in": "query",
            "description": "ASC :ASC\nDESC :DESC",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "sorts[0].property",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "total",
            "in": "query",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "credentials_type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageCredentialsResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "id": "",
                            "tenant_id": "",
                            "credentials_type": "",
                            "description": "",
                            "access_key": "",
                            "access_secret": "",
                            "additional_data": "",
                            "editable": false,
                            "created_at": 0,
                            "updated_at": 0
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "addCredentials",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCredentialsRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyCredentialsResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "tenant_id": "",
                        "credentials_type": "",
                        "description": "",
                        "access_key": "",
                        "access_secret": "",
                        "additional_data": "",
                        "editable": false,
                        "created_at": 0,
                        "updated_at": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/credentials/{id}": {
      "get": {
        "summary": "getCredentials",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyCredentialsResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "tenant_id": "",
                        "credentials_type": "",
                        "description": "",
                        "access_key": "",
                        "access_secret": "",
                        "additional_data": "",
                        "editable": false,
                        "created_at": 0,
                        "updated_at": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "put": {
        "summary": "更新凭证信息updateCredentials",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCredentialsRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyCredentialsResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "tenant_id": "",
                        "credentials_type": "",
                        "description": "",
                        "access_key": "",
                        "access_secret": "",
                        "additional_data": "",
                        "editable": false,
                        "created_at": 0,
                        "updated_at": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/credentials/default/{credentials_type}": {
      "get": {
        "summary": "获取凭证信息Get default credentials",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "credentials_type",
            "in": "path",
            "description": "credentials type, e.g. MQTT, SMTP",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "auto_generate_password",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyCredentialsResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "tenant_id": "",
                        "credentials_type": "",
                        "description": "",
                        "access_key": "",
                        "access_secret": "",
                        "additional_data": "",
                        "editable": false,
                        "created_at": 0,
                        "updated_at": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/credentials/delete": {
      "post": {
        "summary": "batchDeleteCredentials",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteCredentialsRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/dashboard": {
      "post": {
        "summary": "添加仪表盘createDashboard",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDashboardRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyCreateDashboardResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "dashboard_id": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/dashboard/{dashboardId}": {
      "put": {
        "summary": "更新仪表盘updateDashboard",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDashboardRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除仪表盘deleteDashboard",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "获取仪表盘详情getDashboard",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyDashboardResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "dashboard_id": "",
                        "user_id": "",
                        "name": "",
                        "home": false,
                        "created_at": "",
                        "widgets": [
                          {
                            "widget_id": "",
                            "data": {
                              "key": {}
                            }
                          }
                        ],
                        "entity_ids": [
                          ""
                        ],
                        "entities": [
                          {
                            "device_name": "",
                            "integration_name": "",
                            "entity_id": "",
                            "entity_access_mod": "",
                            "entity_key": "",
                            "entity_type": "",
                            "entity_name": "",
                            "entity_parent_name": "",
                            "entity_value_attribute": {
                              "key": {}
                            },
                            "entity_value_type": "",
                            "entity_is_customized": false,
                            "entity_created_at": 0,
                            "entity_updated_at": 0,
                            "entity_description": "",
                            "entity_latest_value": "",
                            "device_group": {
                              "id": "",
                              "name": ""
                            },
                            "entity_tags": [
                              {
                                "id": "",
                                "name": "",
                                "description": "",
                                "color": ""
                              }
                            ]
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/dashboard/dashboards": {
      "get": {
        "summary": "获取所有仪表盘getDashboards",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyListDashboardListItemResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": [
                        {
                          "dashboard_id": "",
                          "user_id": "",
                          "name": "",
                          "home": false,
                          "created_at": ""
                        }
                      ],
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/dashboard/{dashboardId}/home": {
      "post": {
        "summary": "仪表盘置顶setHomeDashboard",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/dashboard/{dashboardId}/cancel-home": {
      "post": {
        "summary": "取消仪表盘置顶cancelSetHomeDashboard",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "dashboard_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow-http-in/{credentialName}@{tenantId}/**": {
      "post": {
        "summary": "requestHttpIn",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "credential_name",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": ""
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/search": {
      "post": {
        "summary": "分页搜索工作流searchWorkflows",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchWorkflowRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageWorkflowResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "id": "",
                            "name": "",
                            "remark": "",
                            "enabled": false,
                            "user_nickname": "",
                            "created_at": 0,
                            "updated_at": 0
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/{flowId}": {
      "put": {
        "summary": "updateWorkflowBasicInfo",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowBasicInfoRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/batch-delete": {
      "post": {
        "summary": "批量删除工作流batchDeleteWorkflow",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteWorkflowRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/{flowId}/enable": {
      "get": {
        "summary": "启用工作流enableWorkflow",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/{flowId}/disable": {
      "get": {
        "summary": "禁用工作流disableWorkflow",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/{flowId}/logs/search": {
      "post": {
        "summary": "查看工作流运行日志searchWorkflowLogs",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchWorkflowLogsRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageWorkflowLogResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "id": "",
                            "start_time": 0,
                            "time_cost": 0,
                            "status": "",
                            "version": 0,
                            "message": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/logs/{logId}": {
      "get": {
        "summary": "运行日志详情getWorkflowLogDetail",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "log_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyWorkflowLogDetailResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "start_time": 0,
                        "time_cost": 0,
                        "status": "",
                        "version": 0,
                        "message": "",
                        "trace_info": [
                          {
                            "message_id": "",
                            "node_id": "",
                            "node_label": "",
                            "node_name": "",
                            "status": "",
                            "error_message": "",
                            "start_time": 0,
                            "time_cost": 0,
                            "input": "",
                            "output": "",
                            "parent_trace_id": ""
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/{flowId}/design": {
      "get": {
        "summary": "工作流详情getWorkflowDesign",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "flow_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyWorkflowDesignResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "name": "",
                        "remark": "",
                        "enabled": false,
                        "version": 0,
                        "design_data": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/design/validate": {
      "post": {
        "summary": "validateWorkflow",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateWorkflowRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyBoolean"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": false,
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/design": {
      "post": {
        "summary": "保存工作流saveWorkflow",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveWorkflowRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodySaveWorkflowResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "flow_id": "",
                        "version": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/design/test": {
      "post": {
        "summary": "测试工作流testWorkflow",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestWorkflowRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyFlowTraceInfo"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "status": "",
                        "flow_id": "",
                        "start_time": 0,
                        "time_cost": 0,
                        "message": "",
                        "trace_infos": [
                          {
                            "message_id": "",
                            "node_id": "",
                            "node_label": "",
                            "node_name": "",
                            "status": "",
                            "error_message": "",
                            "start_time": 0,
                            "time_cost": 0,
                            "input": "",
                            "output": "",
                            "parent_trace_id": ""
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/flows/node/test": {
      "post": {
        "summary": "测试节点testWorkflowNode",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestWorkflowNodeRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyNodeTraceInfo"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "message_id": "",
                        "node_id": "",
                        "node_label": "",
                        "node_name": "",
                        "status": "",
                        "error_message": "",
                        "start_time": 0,
                        "time_cost": 0,
                        "input": "",
                        "output": "",
                        "parent_trace_id": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/components": {
      "get": {
        "summary": "获取工作流节点组件getWorkflowComponents",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyMapListWorkflowComponentData"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "key": [
                          {
                            "name": "",
                            "title": "",
                            "data": ""
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/components/{componentId}": {
      "get": {
        "summary": "getWorkflowComponent",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "component_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyString"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/workflow/components/languages": {
      "get": {
        "summary": "getWorkflowComponent",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyRuleLanguage"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "code": [
                          ""
                        ],
                        "expression": [
                          ""
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/advanced-search": {
      "post": {
        "summary": "实体数据过滤advancedSearch",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityAdvancedSearchQuery",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageEntityResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "device_name": "",
                            "integration_name": "",
                            "entity_id": "",
                            "entity_access_mod": "",
                            "entity_key": "",
                            "entity_type": "",
                            "entity_name": "",
                            "entity_parent_name": "",
                            "entity_value_attribute": {
                              "key": {}
                            },
                            "entity_value_type": "",
                            "entity_is_customized": false,
                            "entity_created_at": 0,
                            "entity_updated_at": 0,
                            "entity_description": "",
                            "entity_latest_value": "",
                            "device_group": {
                              "id": "",
                              "name": ""
                            },
                            "entity_tags": [
                              {
                                "id": "",
                                "name": "",
                                "description": "",
                                "color": ""
                              }
                            ]
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/search": {
      "post": {
        "summary": "自定义实体搜索search",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityQuery",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageEntityResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "device_name": "",
                            "integration_name": "",
                            "entity_id": "",
                            "entity_access_mod": "",
                            "entity_key": "",
                            "entity_type": "",
                            "entity_name": "",
                            "entity_parent_name": "",
                            "entity_value_attribute": {
                              "key": {}
                            },
                            "entity_value_type": "",
                            "entity_is_customized": false,
                            "entity_created_at": 0,
                            "entity_updated_at": 0,
                            "entity_description": "",
                            "entity_latest_value": "",
                            "device_group": {
                              "id": "",
                              "name": ""
                            },
                            "entity_tags": [
                              {
                                "id": "",
                                "name": "",
                                "description": "",
                                "color": ""
                              }
                            ]
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/{entityId}/children": {
      "get": {
        "summary": "获取实体子节点getChildren",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyListEntityResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": [
                        {
                          "device_name": "",
                          "integration_name": "",
                          "entity_id": "",
                          "entity_access_mod": "",
                          "entity_key": "",
                          "entity_type": "",
                          "entity_name": "",
                          "entity_parent_name": "",
                          "entity_value_attribute": {
                            "key": {}
                          },
                          "entity_value_type": "",
                          "entity_is_customized": false,
                          "entity_created_at": 0,
                          "entity_updated_at": 0,
                          "entity_description": "",
                          "entity_latest_value": "",
                          "device_group": {
                            "id": "",
                            "name": ""
                          },
                          "entity_tags": [
                            {
                              "id": "",
                              "name": "",
                              "description": "",
                              "color": ""
                            }
                          ]
                        }
                      ],
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/history/search": {
      "post": {
        "summary": "查询实体历史数据historySearch",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityHistoryQuery",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageEntityHistoryResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "id": "",
                            "entity_id": "",
                            "timestamp": "",
                            "value": {},
                            "value_type": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/history/aggregate": {
      "post": {
        "summary": "历史数据计算historyAggregate",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityAggregateQuery",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEntityAggregateResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "value": {},
                        "value_type": "",
                        "count_result": [
                          {
                            "value": {},
                            "value_type": "",
                            "count": 0
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/{entityId}/status": {
      "get": {
        "summary": "获取bool实体状态getEntityStatus",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEntityLatestResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "value": {},
                        "updated_at": "",
                        "value_type": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/{entityId}/meta": {
      "get": {
        "summary": "getEntityMeta",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEntityMetaResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": 0,
                        "key": "",
                        "name": "",
                        "type": "",
                        "access_mod": "",
                        "value_attribute": {
                          "key": {}
                        },
                        "value_type": "",
                        "customized": false,
                        "created_at": 0,
                        "updated_at": 0,
                        "description": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/property/update": {
      "post": {
        "summary": "更新属性updatePropertyEntity",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePropertyEntityRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/service/call": {
      "post": {
        "summary": "调用服务serviceCall",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCallRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEventResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "key": {}
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity": {
      "post": {
        "summary": "创建自定义实体Create entity",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityCreateRequest",
                "description": "request body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEntityMetaResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": 0,
                        "key": "",
                        "name": "",
                        "type": "",
                        "access_mod": "",
                        "value_attribute": {
                          "key": {}
                        },
                        "value_type": "",
                        "customized": false,
                        "created_at": 0,
                        "updated_at": 0,
                        "description": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/{entityId}": {
      "put": {
        "summary": "更新自定义实体Update customized entity",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "description": "entity ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityModifyRequest",
                "description": "request body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEntityMetaResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": 0,
                        "key": "",
                        "name": "",
                        "type": "",
                        "access_mod": "",
                        "value_attribute": {
                          "key": {}
                        },
                        "value_type": "",
                        "customized": false,
                        "created_at": 0,
                        "updated_at": 0,
                        "description": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/delete": {
      "post": {
        "summary": "删除自定义实体Delete customized entity and its children",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityDeleteRequest",
                "description": "request body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/export": {
      "get": {
        "summary": "导出实体数据Export entity data as a CSV file",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "The IDs of the entities to be exported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "start_timestamp",
            "in": "query",
            "description": "The start timestamp of the data to be exported. <br>\nUnix timestamp in milliseconds. <br>\nDefault: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "end_timestamp",
            "in": "query",
            "description": "The end timestamp of the data to be exported. <br>\nUnix timestamp in milliseconds. <br>\nDefault: current timestamp",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "time_zone",
            "in": "query",
            "description": "The time zone identifier of the data to be exported. <br>\nDefault value is the time zone of the server.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/tags/search": {
      "post": {
        "summary": "标签搜索search",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityTagQuery",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageEntityTagResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "id": "",
                            "name": "",
                            "description": "",
                            "color": "",
                            "created_at": 0,
                            "updated_at": 0,
                            "tagged_entities_count": 0
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/tags/number": {
      "get": {
        "summary": "获取标签总数count",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEntityTagNumberResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "number": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/tags": {
      "post": {
        "summary": "添加标签create",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityTagUpdateRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyEntityTagResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "name": "",
                        "description": "",
                        "color": "",
                        "created_at": 0,
                        "updated_at": 0,
                        "tagged_entities_count": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/tags/{tagId}": {
      "put": {
        "summary": "更新标签update",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityTagUpdateRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/tags/delete": {
      "post": {
        "summary": "删除标签delete",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityTagDeleteRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/entity/tags/mapping": {
      "post": {
        "summary": "实体标签变更mapping",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityTagMappingRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device": {
      "post": {
        "summary": "添加设备createDevice",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceRequest",
                "description": "com.milesight.beaveriot.device.model.request.CreateDeviceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyString"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device/search": {
      "post": {
        "summary": "设备分页查询searchDevice",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchDeviceRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageDeviceResponseData"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "id": "",
                            "key": "",
                            "name": "",
                            "integration": "",
                            "identifier": "",
                            "additional_data": {
                              "key": {}
                            },
                            "template": "",
                            "created_at": 0,
                            "updated_at": 0,
                            "integration_name": "",
                            "group_name": "",
                            "deletable": false
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device/{deviceId}": {
      "put": {
        "summary": "更新设备updateDevice",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "获取设备详情getDeviceDetail",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyDeviceDetailResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "id": "",
                        "key": "",
                        "name": "",
                        "integration": "",
                        "identifier": "",
                        "additional_data": {
                          "key": {}
                        },
                        "template": "",
                        "created_at": 0,
                        "updated_at": 0,
                        "integration_name": "",
                        "group_name": "",
                        "deletable": false,
                        "template_name": "",
                        "user_nickname": "",
                        "user_email": "",
                        "entities": [
                          {
                            "id": "",
                            "key": "",
                            "name": "",
                            "type": "",
                            "value_attribute": {
                              "key": {}
                            },
                            "value_type": "",
                            "description": "",
                            "entity_tags": [
                              {
                                "id": "",
                                "name": "",
                                "description": "",
                                "color": ""
                              }
                            ]
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device/batch-delete": {
      "post": {
        "summary": "批量删除设备batchDeleteDevices",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteDeviceRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device/move-to-group": {
      "post": {
        "summary": "变更设备组updateDevice",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveDeviceToGroupRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device-batch/template": {
      "post": {
        "summary": "批量添加设备模版下载generateTemplate",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeviceTemplateRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": [
                      0
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device-batch/parse": {
      "post": {
        "summary": "解析excel文件parseBatchFile",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "integration",
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyDeviceListSheetParseResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "create_device_requests": [
                          {
                            "name": "",
                            "integration": "",
                            "template": "",
                            "group_name": "",
                            "param_entities": {
                              "key": {}
                            }
                          }
                        ],
                        "row_id": [
                          0
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device-batch/fill-error": {
      "post": {
        "summary": "下载错误信息文件fillDeviceBatchError",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "integration": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "errors": {
                    "type": "string"
                  }
                },
                "required": [
                  "integration",
                  "file",
                  "errors"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": [
                      0
                    ]
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device-group/search": {
      "post": {
        "summary": "搜索分组searchGroup",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchDeviceGroupRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageDeviceGroupResponseData"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "id": "",
                            "name": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device-group/number": {
      "get": {
        "summary": "获取分组数量countGroup",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyDeviceGroupNumberResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "number": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device-group": {
      "post": {
        "summary": "添加分组addGroup",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceGroupRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/device-group/{groupId}": {
      "put": {
        "summary": "编辑分组updateGroup",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDeviceGroupRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除分组deleteGroup",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/menus": {
      "get": {
        "summary": "获取所有功能权限getMenus",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyListMenuResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": [
                        {
                          "menu_id": "",
                          "code": "",
                          "name": "",
                          "type": "",
                          "parent_id": "",
                          "children": [
                            {
                              "menu_id": "",
                              "code": "",
                              "name": "",
                              "type": "",
                              "parent_id": "",
                              "children": []
                            }
                          ]
                        }
                      ],
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles": {
      "post": {
        "summary": "创建角色createRole",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyCreateRoleResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "role_id": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}": {
      "put": {
        "summary": "编辑角色updateRole",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除角色deleteRole",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/search": {
      "post": {
        "summary": "分页搜索角色getRoles",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageRoleResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "role_id": "",
                            "name": "",
                            "description": "",
                            "created_at": "",
                            "user_role_count": 0,
                            "role_integration_count": 0
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/members": {
      "post": {
        "summary": "查询角色下的用户getUsersByRoleId",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageUserRoleResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "role_id": "",
                            "user_id": "",
                            "user_nickname": "",
                            "user_email": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/menus": {
      "get": {
        "summary": "获取当前角色的权限getMenusByRoleId",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyListRoleMenuResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": [
                        {
                          "menu_id": "",
                          "code": "",
                          "name": "",
                          "type": "",
                          "parent_id": ""
                        }
                      ],
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/resources": {
      "post": {
        "summary": "getResourcesByRoleId",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleResourceListRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageRoleResourceResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "resource_id": "",
                            "resource_type": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/integrations": {
      "post": {
        "summary": "获取集成权限资源getIntegrationsByRoleId",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageRoleIntegrationResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "integration_id": "",
                            "integration_name": "",
                            "device_num": 0,
                            "entity_num": 0
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/devices": {
      "post": {
        "summary": "获取设备权限资源getDevicesByRoleId",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageRoleDeviceResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "device_id": "",
                            "device_name": "",
                            "created_at": "",
                            "integration_id": "",
                            "integration_name": "",
                            "user_id": "",
                            "user_email": "",
                            "user_nickname": "",
                            "is_role_integration": false,
                            "role_integration": false
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/dashboards": {
      "post": {
        "summary": "获取仪表盘权限资源getDashboardsByRoleId",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageRoleDashboardResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "dashboard_id": "",
                            "dashboard_name": "",
                            "created_at": "",
                            "user_id": "",
                            "user_email": "",
                            "user_nickname": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/undistributed-dashboards": {
      "post": {
        "summary": "获取未分配的仪表盘getUndistributedDashboards",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageDashboardUndistributedResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "dashboard_id": "",
                            "dashboard_name": "",
                            "created_at": "",
                            "user_id": "",
                            "user_email": "",
                            "user_nickname": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/undistributed-users": {
      "post": {
        "summary": "获取未分配的用户getUndistributedUsers",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageUserUndistributedResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "user_id": "",
                            "nickname": "",
                            "email": "",
                            "created_at": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/undistributed-integrations": {
      "post": {
        "summary": "获取未分配的集成getUndistributedIntegrations",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageIntegrationUndistributedResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "integration_id": "",
                            "integration_name": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/undistributed-devices": {
      "post": {
        "summary": "获取未分配的设备getUndistributedDevices",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageDeviceUndistributedResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "device_id": "",
                            "device_name": "",
                            "created_at": "",
                            "integration_id": "",
                            "integration_name": "",
                            "user_id": "",
                            "user_email": "",
                            "user_nickname": ""
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/associate-user": {
      "post": {
        "summary": "添加成员权限associateUser",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/disassociate-user": {
      "post": {
        "summary": "移除成员权限disassociateUser",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/associate-resource": {
      "post": {
        "summary": "添加资源权限associateResource",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleResourceRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/disassociate-resource": {
      "post": {
        "summary": "移除资源权限disassociateResource",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleResourceRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/roles/{roleId}/associate-menu": {
      "post": {
        "summary": "编辑功能权限associateMenu",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleMenuRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/register": {
      "post": {
        "summary": "用户注册register",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/status": {
      "get": {
        "summary": "获取用户注册状态status",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyUserStatusResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "init": false
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user": {
      "get": {
        "summary": "用户详情getUserInfo",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyUserInfoResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "tenant_id": "",
                        "user_id": "",
                        "nickname": "",
                        "email": "",
                        "roles": [
                          {
                            "role_id": "",
                            "role_name": ""
                          }
                        ],
                        "is_super_admin": false,
                        "created_at": "",
                        "menus": [
                          {
                            "menu_id": "",
                            "code": "",
                            "name": "",
                            "type": "",
                            "parent_id": "",
                            "children": [
                              {
                                "menu_id": "",
                                "code": "",
                                "name": "",
                                "type": "",
                                "parent_id": "",
                                "children": []
                              }
                            ]
                          }
                        ]
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/members/search": {
      "post": {
        "summary": "分页查询设备列表getUsers",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericQueryPageRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyPageUserInfoResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "content": [
                          {
                            "tenant_id": "",
                            "user_id": "",
                            "nickname": "",
                            "email": "",
                            "roles": [
                              {
                                "role_id": "",
                                "role_name": ""
                              }
                            ],
                            "is_super_admin": false,
                            "created_at": "",
                            "menus": [
                              {
                                "menu_id": "",
                                "code": "",
                                "name": "",
                                "type": "",
                                "parent_id": "",
                                "children": [
                                  {
                                    "menu_id": "",
                                    "code": "",
                                    "name": "",
                                    "type": "",
                                    "parent_id": "",
                                    "children": []
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "pageable": {
                          "paged": false,
                          "unpaged": false,
                          "page_number": 0,
                          "page_size": 0,
                          "offset": 0,
                          "sort": [
                            {
                              "direction": "",
                              "property": "",
                              "ignore_case": false,
                              "null_handling": "",
                              "ascending": false,
                              "descending": false
                            }
                          ]
                        },
                        "total": 0,
                        "empty": false,
                        "number": 0,
                        "size": 0,
                        "number_of_elements": 0,
                        "sort": [
                          {
                            "direction": "",
                            "property": "",
                            "ignore_case": false,
                            "null_handling": "",
                            "ascending": false,
                            "descending": false
                          }
                        ],
                        "first": false,
                        "last": false,
                        "total_pages": 0,
                        "total_elements": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/members": {
      "post": {
        "summary": "添加用户createUser",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/password": {
      "put": {
        "summary": "updatePassword",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/members/{userId}": {
      "put": {
        "summary": "更新用户信息updateUser",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "deleteUser",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/members/{userId}/change-password": {
      "put": {
        "summary": "重置用户密码changePassword",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/batch-delete": {
      "post": {
        "summary": "批量删除用户batchDeleteUsers",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchDeleteUserRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyVoid"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": "",
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/members/{userId}/menus": {
      "get": {
        "summary": "getMenusByUserId",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyListUserMenuResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": [
                        {
                          "menu_id": "",
                          "code": "",
                          "name": "",
                          "type": "",
                          "parent_id": ""
                        }
                      ],
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/members/{userId}/permission": {
      "post": {
        "summary": "getUserPermission",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPermissionRequest",
                "description": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyUserPermissionResponse"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "is_has_permission": false
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/mqtt/broker-info": {
      "get": {
        "summary": "获取MQTT信息getMqttBrokerInfo",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyMqttBrokerInfo"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "host": "",
                        "mqtt_port": 0,
                        "mqtts_port": 0,
                        "ws_path": "",
                        "ws_port": 0,
                        "wss_port": 0
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/mqtt/web/credentials": {
      "get": {
        "summary": "获取MQTT证书getWebMqttCredentials",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyWebMqttCredentials"
                },
                "examples": {
                  "1": {
                    "summary": "",
                    "value": {
                      "data": {
                        "client_id": "",
                        "username": "",
                        "password": ""
                      },
                      "status": "",
                      "request_id": "",
                      "error_code": "",
                      "error_message": "",
                      "detail_message": ""
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/oauth2/token": {
      "post": {
        "summary": "用户登录Login",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{access_token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{access_token}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "const": "password",
                    "example": "password"
                  },
                  "username": {
                    "example": "",
                    "type": "string"
                  },
                  "password": {
                    "example": "",
                    "type": "string"
                  },
                  "client_id": {
                    "type": "string",
                    "const": "iab",
                    "example": "iab"
                  },
                  "client_secret": {
                    "type": "string",
                    "const": "milesight*iab",
                    "example": "milesight*iab"
                  }
                },
                "required": [
                  "grant_type",
                  "username",
                  "password",
                  "client_id",
                  "client_secret"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "expires_in": {
                          "type": "number"
                        },
                        "refresh_token": {
                          "type": "string"
                        },
                        "token_type": {
                          "type": "string",
                          "const": "Bearer"
                        }
                      },
                      "required": [
                        "access_token",
                        "refresh_token",
                        "token_type",
                        "expires_in"
                      ]
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "status"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "ResponseBodyVoid": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "key": {
        "type": "object",
        "properties": {}
      },
      "MapObject": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/key18"
          }
        }
      },
      "EntityPO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "tenant_id": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "key": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "PROPERTY",
              "SERVICE",
              "EVENT"
            ]
          },
          "access_mod": {
            "type": "string",
            "description": "",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "parent": {
            "type": "string",
            "description": ""
          },
          "attach_target": {
            "type": "string",
            "description": "",
            "enum": [
              "DEVICE",
              "INTEGRATION"
            ]
          },
          "attach_target_id": {
            "type": "string",
            "description": ""
          },
          "value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "visible": {
            "type": "boolean",
            "description": "Whether the entity is visible to the user.",
            "default": true
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "description": ""
          }
        }
      },
      "EntityPO1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "tenant_id": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "key": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "PROPERTY",
              "SERVICE",
              "EVENT"
            ]
          },
          "access_mod": {
            "type": "string",
            "description": "",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "parent": {
            "type": "string",
            "description": ""
          },
          "attach_target": {
            "type": "string",
            "description": "",
            "enum": [
              "DEVICE",
              "INTEGRATION"
            ]
          },
          "attach_target_id": {
            "type": "string",
            "description": ""
          },
          "value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "visible": {
            "type": "boolean",
            "description": "Whether the entity is visible to the user.",
            "default": true
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "description": ""
          }
        }
      },
      "key2": {
        "type": "object",
        "properties": {}
      },
      "MapEntityPO": {
        "type": "object",
        "properties": {
          "key": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "",
                "format": "int64"
              },
              "tenant_id": {
                "type": "string",
                "description": ""
              },
              "user_id": {
                "type": "integer",
                "description": "",
                "format": "int64"
              },
              "key": {
                "type": "string",
                "description": ""
              },
              "name": {
                "type": "string",
                "description": ""
              },
              "type": {
                "type": "string",
                "description": "",
                "enum": [
                  "PROPERTY",
                  "SERVICE",
                  "EVENT"
                ]
              },
              "access_mod": {
                "type": "string",
                "description": "",
                "enum": [
                  "R",
                  "W",
                  "RW"
                ]
              },
              "parent": {
                "type": "string",
                "description": ""
              },
              "attach_target": {
                "type": "string",
                "description": "",
                "enum": [
                  "DEVICE",
                  "INTEGRATION"
                ]
              },
              "attach_target_id": {
                "type": "string",
                "description": ""
              },
              "value_attribute": {
                "$ref": "#/components/schemas/MapObject",
                "description": ""
              },
              "value_type": {
                "type": "string",
                "description": "",
                "enum": [
                  "STRING",
                  "LONG",
                  "DOUBLE",
                  "BOOLEAN",
                  "BINARY",
                  "OBJECT"
                ]
              },
              "visible": {
                "type": "boolean",
                "description": "Whether the entity is visible to the user.",
                "default": true
              },
              "created_at": {
                "type": "integer",
                "description": "",
                "format": "int64"
              },
              "updated_at": {
                "type": "integer",
                "description": "",
                "format": "int64"
              },
              "description": {
                "type": "string",
                "description": ""
              }
            }
          }
        }
      },
      "ExchangePayload": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/key19"
          }
        }
      },
      "NodeTraceInfo": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "description": ""
          },
          "node_id": {
            "type": "string",
            "description": ""
          },
          "node_label": {
            "type": "string",
            "description": ""
          },
          "node_name": {
            "type": "string",
            "description": ""
          },
          "status": {
            "type": "string",
            "description": "",
            "enum": [
              "SUCCESS",
              "ERROR"
            ],
            "default": "ExecutionStatus.SUCCESS"
          },
          "error_message": {
            "type": "string",
            "description": ""
          },
          "start_time": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "time_cost": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "input": {
            "type": "string",
            "description": ""
          },
          "output": {
            "type": "string",
            "description": ""
          },
          "parent_trace_id": {
            "type": "string",
            "description": ""
          }
        }
      },
      "FlowTraceInfo": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "",
            "enum": [
              "SUCCESS",
              "ERROR"
            ],
            "default": "ExecutionStatus.SUCCESS"
          },
          "flow_id": {
            "type": "string",
            "description": ""
          },
          "start_time": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "time_cost": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "message": {
            "type": "string",
            "description": ""
          },
          "trace_infos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeTraceInfo",
              "description": ""
            },
            "description": "",
            "default": "new ArrayList<>()"
          }
        }
      },
      "ResponseBodyFlowTraceInfo": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowTraceInfo",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ResponseBodyNodeTraceInfo": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NodeTraceInfo",
            "description": ""
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "PreSignResult": {
        "type": "object",
        "properties": {
          "upload_url": {
            "type": "string",
            "description": ""
          },
          "resource_url": {
            "type": "string",
            "description": ""
          },
          "key": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyPreSignResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PreSignResult",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "RequestUploadConfig": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": ""
          },
          "file_name": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "temp_resource_live_minutes": {
            "type": "integer",
            "description": ""
          }
        }
      },
      "SearchIntegrationResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "icon": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "add_device_service_key": {
            "type": "string",
            "description": ""
          },
          "device_count": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "entity_count": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "ResponseBodyListSearchIntegrationResponseData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchIntegrationResponseData",
              "description": "com.milesight.beaveriot.integration.model.response.SearchIntegrationResponseData"
            },
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "SearchIntegrationRequest": {
        "type": "object",
        "properties": {
          "device_addable": {
            "type": "boolean",
            "description": ""
          },
          "device_deletable": {
            "type": "boolean",
            "description": ""
          }
        }
      },
      "key3": {
        "type": "object",
        "properties": {}
      },
      "IntegrationEntityData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "key": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "PROPERTY",
              "SERVICE",
              "EVENT"
            ]
          },
          "value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "access_mod": {
            "type": "string",
            "description": "",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "parent": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "object",
            "properties": {},
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          }
        }
      },
      "IntegrationDetailData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "icon": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "add_device_service_key": {
            "type": "string",
            "description": ""
          },
          "device_count": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "entity_count": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "delete_device_service_key": {
            "type": "string",
            "description": ""
          },
          "integration_entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationEntityData",
              "description": "com.milesight.beaveriot.integration.model.response.IntegrationEntityData"
            },
            "description": ""
          }
        }
      },
      "ResponseBodyIntegrationDetailData": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/IntegrationDetailData",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "CredentialsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "tenant_id": {
            "type": "string",
            "description": ""
          },
          "credentials_type": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "access_key": {
            "type": "string",
            "description": ""
          },
          "access_secret": {
            "type": "string",
            "description": ""
          },
          "additional_data": {
            "type": "string",
            "description": ""
          },
          "editable": {
            "type": "boolean",
            "description": ""
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string",
            "description": "",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          "property": {
            "type": "string",
            "description": ""
          },
          "ignore_case": {
            "type": "boolean",
            "description": ""
          },
          "null_handling": {
            "type": "string",
            "description": "",
            "enum": [
              "NATIVE",
              "NULLS_FIRST",
              "NULLS_LAST"
            ]
          },
          "ascending": {
            "type": "boolean"
          },
          "descending": {
            "type": "boolean"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          },
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          }
        }
      },
      "PageCredentialsResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialsResponse",
              "description": "com.milesight.beaveriot.credentials.model.response.CredentialsResponse"
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageCredentialsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageCredentialsResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ResponseBodyCredentialsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CredentialsResponse",
            "description": "com.milesight.beaveriot.credentials.model.response.CredentialsResponse"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "JsonNode": {
        "type": "object",
        "properties": {}
      },
      "AddCredentialsRequest": {
        "type": "object",
        "properties": {
          "credentials_type": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "access_key": {
            "type": "string",
            "description": ""
          },
          "access_secret": {
            "type": "string",
            "description": ""
          },
          "additional_data": {
            "$ref": "#/components/schemas/JsonNode",
            "description": ""
          }
        }
      },
      "UpdateCredentialsRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": ""
          },
          "access_key": {
            "type": "string",
            "description": ""
          },
          "access_secret": {
            "type": "string",
            "description": ""
          },
          "additional_data": {
            "$ref": "#/components/schemas/JsonNode",
            "description": ""
          }
        }
      },
      "BatchDeleteCredentialsRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          }
        }
      },
      "CreateDashboardResponse": {
        "type": "object",
        "properties": {
          "dashboard_id": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyCreateDashboardResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateDashboardResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "CreateDashboardRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": ""
          }
        }
      },
      "key4": {
        "type": "object",
        "properties": {}
      },
      "DashboardWidgetDTO": {
        "type": "object",
        "properties": {
          "widget_id": {
            "type": "string",
            "description": ""
          },
          "data": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          }
        }
      },
      "UpdateDashboardRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": ""
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardWidgetDTO",
              "description": ""
            },
            "description": "",
            "maxItems": 120
          },
          "entity_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "",
            "maxItems": 1000
          }
        }
      },
      "DashboardListItemResponse": {
        "type": "object",
        "properties": {
          "dashboard_id": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "home": {
            "type": "boolean",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyListDashboardListItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardListItemResponse",
              "description": ""
            },
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "key5": {
        "type": "object",
        "properties": {}
      },
      "key6": {
        "type": "object",
        "properties": {}
      },
      "EntityDeviceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          }
        }
      },
      "EntityTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "color": {
            "type": "string",
            "description": ""
          }
        }
      },
      "EntityResponse": {
        "type": "object",
        "properties": {
          "device_name": {
            "type": "string",
            "description": ""
          },
          "integration_name": {
            "type": "string",
            "description": ""
          },
          "entity_id": {
            "type": "string",
            "description": ""
          },
          "entity_access_mod": {
            "type": "string",
            "description": "",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "entity_key": {
            "type": "string",
            "description": ""
          },
          "entity_type": {
            "type": "string",
            "description": "",
            "enum": [
              "PROPERTY",
              "SERVICE",
              "EVENT"
            ]
          },
          "entity_name": {
            "type": "string",
            "description": ""
          },
          "entity_parent_name": {
            "type": "string",
            "description": ""
          },
          "entity_value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "entity_value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "entity_is_customized": {
            "type": "boolean",
            "description": ""
          },
          "entity_created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "entity_updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "entity_description": {
            "type": "string",
            "description": ""
          },
          "entity_latest_value": {
            "type": "string",
            "description": ""
          },
          "device_group": {
            "$ref": "#/components/schemas/EntityDeviceGroup",
            "description": ""
          },
          "entity_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityTag",
              "description": "com.milesight.beaveriot.context.model.EntityTag"
            },
            "description": ""
          }
        }
      },
      "DashboardResponse": {
        "type": "object",
        "properties": {
          "dashboard_id": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "home": {
            "type": "boolean",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          },
          "widgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardWidgetDTO",
              "description": ""
            },
            "description": ""
          },
          "entity_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResponse",
              "description": ""
            },
            "description": ""
          }
        }
      },
      "ResponseBodyDashboardResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DashboardResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "WorkflowResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "remark": {
            "type": "string",
            "description": ""
          },
          "enabled": {
            "type": "boolean",
            "description": ""
          },
          "user_nickname": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "PageWorkflowResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowResponse",
              "description": "com.milesight.beaveriot.rule.manager.model.response.WorkflowResponse"
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageWorkflowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageWorkflowResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string",
            "description": "",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          "property": {
            "type": "string",
            "description": ""
          }
        }
      },
      "SearchWorkflowRequest": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "enabled": {
            "type": "boolean",
            "description": ""
          }
        }
      },
      "WorkflowBasicInfoRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 50
          },
          "remark": {
            "type": "string",
            "description": "",
            "maxLength": 500
          }
        }
      },
      "BatchDeleteWorkflowRequest": {
        "type": "object",
        "properties": {
          "workflow_id_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "WorkflowLogResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "start_time": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "time_cost": {
            "type": "integer",
            "description": ""
          },
          "status": {
            "type": "string",
            "description": ""
          },
          "version": {
            "type": "integer",
            "description": ""
          },
          "message": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageWorkflowLogResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowLogResponse",
              "description": "com.milesight.beaveriot.rule.manager.model.response.WorkflowLogResponse"
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageWorkflowLogResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageWorkflowLogResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "SearchWorkflowLogsRequest": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "description": ""
          }
        }
      },
      "WorkflowLogDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "start_time": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "time_cost": {
            "type": "integer",
            "description": ""
          },
          "status": {
            "type": "string",
            "description": ""
          },
          "version": {
            "type": "integer",
            "description": ""
          },
          "message": {
            "type": "string",
            "description": ""
          },
          "trace_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeTraceInfo",
              "description": ""
            },
            "description": ""
          }
        }
      },
      "ResponseBodyWorkflowLogDetailResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorkflowLogDetailResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "WorkflowDesignResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "remark": {
            "type": "string",
            "description": ""
          },
          "enabled": {
            "type": "boolean",
            "description": ""
          },
          "version": {
            "type": "integer",
            "description": ""
          },
          "design_data": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyWorkflowDesignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WorkflowDesignResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ResponseBodyBoolean": {
        "type": "object",
        "properties": {
          "data": {
            "type": "boolean",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ValidateWorkflowRequest": {
        "type": "object",
        "properties": {
          "design_data": {
            "type": "string",
            "description": "",
            "maxLength": 2097152
          }
        }
      },
      "SaveWorkflowResponse": {
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "description": ""
          },
          "version": {
            "type": "integer",
            "description": ""
          }
        }
      },
      "ResponseBodySaveWorkflowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SaveWorkflowResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "SaveWorkflowRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 50
          },
          "remark": {
            "type": "string",
            "description": "",
            "maxLength": 500
          },
          "enabled": {
            "type": "boolean",
            "description": "",
            "default": false
          },
          "design_data": {
            "type": "string",
            "description": "",
            "maxLength": 2097152
          },
          "version": {
            "type": "integer",
            "description": ""
          }
        }
      },
      "key7": {
        "type": "object",
        "properties": {}
      },
      "TestWorkflowRequest": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "design_data": {
            "type": "string",
            "description": ""
          }
        }
      },
      "TestWorkflowNodeRequest": {
        "type": "object",
        "properties": {
          "node_config": {
            "type": "string",
            "description": "",
            "maxLength": 2097152
          },
          "input": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          }
        }
      },
      "key8": {
        "type": "object",
        "properties": {}
      },
      "MapListWorkflowComponentData": {
        "type": "object",
        "properties": {
          "key": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/key8"
            }
          }
        }
      },
      "ResponseBodyMapListWorkflowComponentData": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MapListWorkflowComponentData",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ResponseBodyString": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "RuleLanguage": {
        "type": "object",
        "properties": {
          "code": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "expression": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "ResponseBodyRuleLanguage": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RuleLanguage",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "key9": {
        "type": "object",
        "properties": {}
      },
      "PageEntityResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageEntityResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageEntityResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "key10": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "description": "",
            "enum": [
              "CONTAINS",
              "NOT_CONTAINS",
              "START_WITH",
              "END_WITH",
              "ANY_EQUALS",
              "IS_EMPTY",
              "IS_NOT_EMPTY",
              "EQ",
              "NE",
              "LT",
              "LE",
              "GT",
              "GE"
            ]
          },
          "values": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            },
            "description": "",
            "minItems": 1,
            "maxItems": 100
          }
        },
        "required": [
          "operator"
        ]
      },
      "MapEntityAdvancedSearchCondition": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/key10"
          }
        }
      },
      "EntityAdvancedSearchQuery": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "entity_filter": {
            "$ref": "#/components/schemas/MapEntityAdvancedSearchCondition",
            "description": ""
          }
        }
      },
      "EntityQuery": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "keyword": {
            "type": "string",
            "description": ""
          },
          "entity_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PROPERTY",
                "SERVICE",
                "EVENT"
              ]
            },
            "description": ""
          },
          "exclude_children": {
            "type": "boolean",
            "description": ""
          },
          "entity_value_type": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "STRING",
                "LONG",
                "DOUBLE",
                "BOOLEAN",
                "BINARY",
                "OBJECT"
              ]
            },
            "description": ""
          },
          "entity_access_mod": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "R",
                "W",
                "RW"
              ]
            },
            "description": ""
          },
          "entity_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          },
          "entity_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "entity_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "entity_source_name": {
            "type": "string",
            "description": ""
          },
          "customized": {
            "type": "boolean",
            "description": "Filter customized entities"
          },
          "show_hidden": {
            "type": "boolean",
            "description": "Show hidden entities"
          },
          "not_scan_key": {
            "type": "boolean",
            "description": "Do not detect keyword in keys"
          }
        }
      },
      "key11": {
        "type": "object",
        "properties": {}
      },
      "ResponseBodyListEntityResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResponse",
              "description": ""
            },
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "EntityHistoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "entity_id": {
            "type": "string",
            "description": ""
          },
          "timestamp": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "object",
            "properties": {},
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          }
        }
      },
      "PageEntityHistoryResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityHistoryResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageEntityHistoryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageEntityHistoryResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "EntityHistoryQuery": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "entity_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "entity_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          },
          "start_timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "end_timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "CountResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "properties": {},
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "count": {
            "type": "integer",
            "description": ""
          }
        }
      },
      "EntityAggregateResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "properties": {},
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "count_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountResult",
              "description": "com.milesight.beaveriot.entity.model.response.EntityAggregateResponse.CountResult"
            },
            "description": ""
          }
        }
      },
      "ResponseBodyEntityAggregateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityAggregateResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "EntityAggregateQuery": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "aggregate_type": {
            "type": "string",
            "description": "",
            "enum": [
              "LAST",
              "MIN",
              "MAX",
              "AVG",
              "SUM",
              "COUNT"
            ]
          },
          "start_timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "end_timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "EntityLatestResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "properties": {},
            "description": ""
          },
          "updated_at": {
            "type": "string",
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          }
        }
      },
      "ResponseBodyEntityLatestResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityLatestResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "key12": {
        "type": "object",
        "properties": {}
      },
      "EntityMetaResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "key": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "PROPERTY",
              "SERVICE",
              "EVENT"
            ]
          },
          "access_mod": {
            "type": "string",
            "description": "",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "customized": {
            "type": "boolean",
            "description": ""
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyEntityMetaResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityMetaResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "key13": {
        "type": "object",
        "properties": {}
      },
      "UpdatePropertyEntityRequest": {
        "type": "object",
        "properties": {
          "exchange": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          }
        }
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/key8"
          }
        }
      },
      "ResponseBodyEventResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ServiceCallRequest": {
        "type": "object",
        "properties": {
          "exchange": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          }
        }
      },
      "key14": {
        "type": "object",
        "properties": {}
      },
      "EntityCreateRequest": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "",
            "maxLength": 50
          },
          "access_mod": {
            "type": "string",
            "description": "",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "PROPERTY",
              "SERVICE",
              "EVENT"
            ]
          },
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 64
          },
          "value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "visible": {
            "type": "boolean",
            "description": ""
          },
          "parent_identifier": {
            "type": "string",
            "description": "",
            "maxLength": 50
          }
        }
      },
      "EntityModifyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 64
          },
          "value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          }
        }
      },
      "EntityDeleteRequest": {
        "type": "object",
        "properties": {
          "entity_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The IDs of the entities to be deleted."
          }
        }
      },
      "EntityTagResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "color": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "tagged_entities_count": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "PageEntityTagResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityTagResponse",
              "description": "com.milesight.beaveriot.entity.model.response.EntityTagResponse"
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageEntityTagResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageEntityTagResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "EntityTagQuery": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "keyword": {
            "type": "string",
            "description": ""
          }
        }
      },
      "EntityTagNumberResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "ResponseBodyEntityTagNumberResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityTagNumberResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ResponseBodyEntityTagResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityTagResponse",
            "description": "com.milesight.beaveriot.entity.model.response.EntityTagResponse"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "EntityTagUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 25
          },
          "description": {
            "type": "string",
            "description": "",
            "maxLength": 63
          },
          "color": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 32
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "EntityTagDeleteRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          }
        }
      },
      "EntityTagMappingRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "description": "",
            "enum": [
              "ADD",
              "OVERWRITE",
              "REMOVE",
              "REPLACE"
            ]
          },
          "entity_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          },
          "removed_tag_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "",
            "minItems": 1,
            "maxItems": 300
          },
          "added_tag_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "",
            "minItems": 1,
            "maxItems": 10
          }
        },
        "required": [
          "operation",
          "entity_ids"
        ]
      },
      "key15": {
        "type": "object",
        "properties": {}
      },
      "CreateDeviceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 64
          },
          "integration": {
            "type": "string",
            "description": ""
          },
          "template": {
            "type": "string",
            "description": ""
          },
          "group_name": {
            "type": "string",
            "description": "",
            "maxLength": 127
          },
          "param_entities": {
            "$ref": "#/components/schemas/ExchangePayload",
            "description": ""
          }
        },
        "required": [
          "name",
          "integration"
        ]
      },
      "key16": {
        "type": "object",
        "properties": {}
      },
      "DeviceResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "key": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "integration": {
            "type": "string",
            "description": ""
          },
          "identifier": {
            "type": "string",
            "description": ""
          },
          "additional_data": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "template": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "integration_name": {
            "type": "string",
            "description": ""
          },
          "group_name": {
            "type": "string",
            "description": ""
          },
          "deletable": {
            "type": "boolean",
            "description": ""
          }
        }
      },
      "PageDeviceResponseData": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceResponseData",
              "description": "com.milesight.beaveriot.device.model.response.DeviceResponseData"
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageDeviceResponseData": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageDeviceResponseData",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "SearchDeviceRequest": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 64
          },
          "template": {
            "type": "string",
            "description": ""
          },
          "group_id": {
            "type": "string",
            "description": ""
          },
          "filter_not_grouped": {
            "type": "boolean",
            "description": ""
          },
          "identifier": {
            "type": "string",
            "description": ""
          }
        }
      },
      "UpdateDeviceRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 64
          }
        },
        "required": [
          "name"
        ]
      },
      "BatchDeleteDeviceRequest": {
        "type": "object",
        "properties": {
          "device_id_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "key17": {
        "type": "object",
        "properties": {}
      },
      "key18": {
        "type": "object",
        "properties": {}
      },
      "DeviceEntityData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "key": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "PROPERTY",
              "SERVICE",
              "EVENT"
            ]
          },
          "value_attribute": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "value_type": {
            "type": "string",
            "description": "",
            "enum": [
              "STRING",
              "LONG",
              "DOUBLE",
              "BOOLEAN",
              "BINARY",
              "OBJECT"
            ]
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "entity_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityTag",
              "description": "com.milesight.beaveriot.context.model.EntityTag"
            },
            "description": ""
          }
        }
      },
      "DeviceDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "key": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "integration": {
            "type": "string",
            "description": ""
          },
          "identifier": {
            "type": "string",
            "description": ""
          },
          "additional_data": {
            "$ref": "#/components/schemas/MapObject",
            "description": ""
          },
          "template": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "updated_at": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "integration_name": {
            "type": "string",
            "description": ""
          },
          "group_name": {
            "type": "string",
            "description": ""
          },
          "deletable": {
            "type": "boolean",
            "description": ""
          },
          "template_name": {
            "type": "string",
            "description": ""
          },
          "user_nickname": {
            "type": "string",
            "description": ""
          },
          "user_email": {
            "type": "string",
            "description": ""
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceEntityData",
              "description": "com.milesight.beaveriot.device.model.response.DeviceEntityData"
            },
            "description": ""
          }
        }
      },
      "ResponseBodyDeviceDetailResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceDetailResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "MoveDeviceToGroupRequest": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "string",
            "description": ""
          },
          "device_id_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        }
      },
      "BatchDeviceTemplateRequest": {
        "type": "object",
        "properties": {
          "integration": {
            "type": "string",
            "description": ""
          }
        },
        "required": [
          "integration"
        ]
      },
      "key19": {
        "type": "object",
        "properties": {}
      },
      "DeviceListSheetParseResponse": {
        "type": "object",
        "properties": {
          "create_device_requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateDeviceRequest",
              "description": "com.milesight.beaveriot.device.model.request.CreateDeviceRequest"
            },
            "description": ""
          },
          "row_id": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          }
        }
      },
      "ResponseBodyDeviceListSheetParseResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceListSheetParseResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "DeviceGroupResponseData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageDeviceGroupResponseData": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceGroupResponseData",
              "description": "DeviceGroupResponseData class."
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageDeviceGroupResponseData": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageDeviceGroupResponseData",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "SearchDeviceGroupRequest": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "",
            "maxLength": 127
          }
        }
      },
      "CreateDeviceGroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 127
          }
        },
        "required": [
          "name"
        ]
      },
      "DeviceGroupNumberResponse": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "MenuResponse": {
        "type": "object",
        "properties": {
          "menu_id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "MENU",
              "FUNCTION"
            ]
          },
          "parent_id": {
            "type": "string",
            "description": ""
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuResponse",
              "description": ""
            },
            "description": ""
          }
        }
      },
      "ResponseBodyDeviceGroupNumberResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceGroupNumberResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "ResponseBodyListMenuResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuResponse",
              "description": ""
            },
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "CreateRoleResponse": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyCreateRoleResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateRoleResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "CreateRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 127
          },
          "description": {
            "type": "string",
            "description": "",
            "maxLength": 255
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateRoleRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 127
          },
          "description": {
            "type": "string",
            "description": "",
            "maxLength": 255
          }
        },
        "required": [
          "name"
        ]
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          },
          "user_role_count": {
            "type": "integer",
            "description": ""
          },
          "role_integration_count": {
            "type": "integer",
            "description": ""
          }
        }
      },
      "PageRoleResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageRoleResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageRoleResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "GenericQueryPageRequest": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "keyword": {
            "type": "string",
            "description": ""
          }
        }
      },
      "UserRoleResponse": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "user_nickname": {
            "type": "string",
            "description": ""
          },
          "user_email": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageUserRoleResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageUserRoleResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageUserRoleResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "RoleMenuResponse": {
        "type": "object",
        "properties": {
          "menu_id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "MENU",
              "FUNCTION"
            ]
          },
          "parent_id": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyListRoleMenuResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleMenuResponse",
              "description": ""
            },
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "RoleResourceResponse": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "description": ""
          },
          "resource_type": {
            "type": "string",
            "description": "",
            "enum": [
              "ENTITY",
              "DEVICE",
              "INTEGRATION",
              "DASHBOARD",
              "WORKFLOW"
            ]
          }
        }
      },
      "PageRoleResourceResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleResourceResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageRoleResourceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageRoleResourceResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "RoleResourceListRequest": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": ""
          },
          "page_size": {
            "type": "integer",
            "description": "",
            "default": 10
          },
          "page_number": {
            "type": "integer",
            "description": "",
            "default": 1
          },
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order",
              "description": "com.milesight.beaveriot.base.page.Sorts.Order"
            },
            "description": "",
            "default": "new ArrayList<>()"
          },
          "total": {
            "type": "integer",
            "description": "Total number. If the current end submits total, the back end will not perform count calculation.",
            "format": "int64"
          },
          "resource_type": {
            "type": "string",
            "description": "",
            "enum": [
              "ENTITY",
              "DEVICE",
              "INTEGRATION",
              "DASHBOARD",
              "WORKFLOW"
            ]
          }
        }
      },
      "RoleIntegrationResponse": {
        "type": "object",
        "properties": {
          "integration_id": {
            "type": "string",
            "description": ""
          },
          "integration_name": {
            "type": "string",
            "description": ""
          },
          "device_num": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "entity_num": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        }
      },
      "PageRoleIntegrationResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleIntegrationResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageRoleIntegrationResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageRoleIntegrationResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "RoleDeviceResponse": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": ""
          },
          "device_name": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          },
          "integration_id": {
            "type": "string",
            "description": ""
          },
          "integration_name": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "user_email": {
            "type": "string",
            "description": ""
          },
          "user_nickname": {
            "type": "string",
            "description": ""
          },
          "is_role_integration": {
            "type": "boolean",
            "description": ""
          },
          "role_integration": {
            "type": "boolean"
          }
        }
      },
      "PageRoleDeviceResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDeviceResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageRoleDeviceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageRoleDeviceResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "RoleDashboardResponse": {
        "type": "object",
        "properties": {
          "dashboard_id": {
            "type": "string",
            "description": ""
          },
          "dashboard_name": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "user_email": {
            "type": "string",
            "description": ""
          },
          "user_nickname": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageRoleDashboardResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDashboardResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageRoleDashboardResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageRoleDashboardResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "DashboardUndistributedResponse": {
        "type": "object",
        "properties": {
          "dashboard_id": {
            "type": "string",
            "description": ""
          },
          "dashboard_name": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "user_email": {
            "type": "string",
            "description": ""
          },
          "user_nickname": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageDashboardUndistributedResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DashboardUndistributedResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageDashboardUndistributedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageDashboardUndistributedResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "UserUndistributedResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": ""
          },
          "nickname": {
            "type": "string",
            "description": ""
          },
          "email": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageUserUndistributedResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserUndistributedResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageUserUndistributedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageUserUndistributedResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "IntegrationUndistributedResponse": {
        "type": "object",
        "properties": {
          "integration_id": {
            "type": "string",
            "description": ""
          },
          "integration_name": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageIntegrationUndistributedResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationUndistributedResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageIntegrationUndistributedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageIntegrationUndistributedResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "DeviceUndistributedResponse": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string",
            "description": ""
          },
          "device_name": {
            "type": "string",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          },
          "integration_id": {
            "type": "string",
            "description": ""
          },
          "integration_name": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "user_email": {
            "type": "string",
            "description": ""
          },
          "user_nickname": {
            "type": "string",
            "description": ""
          }
        }
      },
      "PageDeviceUndistributedResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceUndistributedResponse",
              "description": ""
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageDeviceUndistributedResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageDeviceUndistributedResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "UserRoleRequest": {
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          }
        }
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "ENTITY",
              "DEVICE",
              "INTEGRATION",
              "DASHBOARD",
              "WORKFLOW"
            ]
          }
        }
      },
      "RoleResourceRequest": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource",
              "description": "com.milesight.beaveriot.user.model.request.RoleResourceRequest.Resource"
            },
            "description": ""
          }
        }
      },
      "RoleMenuRequest": {
        "type": "object",
        "properties": {
          "menu_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          }
        }
      },
      "UserRegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "",
            "minLength": 5,
            "maxLength": 255,
            "format": "email"
          },
          "nickname": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 127
          },
          "password": {
            "type": "string",
            "description": "",
            "minLength": 8,
            "maxLength": 63
          }
        },
        "required": [
          "email",
          "nickname",
          "password"
        ]
      },
      "UserStatusResponse": {
        "type": "object",
        "properties": {
          "init": {
            "type": "boolean",
            "description": ""
          }
        }
      },
      "ResponseBodyUserStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserStatusResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "description": ""
          },
          "role_name": {
            "type": "string",
            "description": ""
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "tenant_id": {
            "type": "string",
            "description": ""
          },
          "user_id": {
            "type": "string",
            "description": ""
          },
          "nickname": {
            "type": "string",
            "description": ""
          },
          "email": {
            "type": "string",
            "description": ""
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role",
              "description": "com.milesight.beaveriot.user.model.response.UserInfoResponse.Role"
            },
            "description": ""
          },
          "is_super_admin": {
            "type": "boolean",
            "description": ""
          },
          "created_at": {
            "type": "string",
            "description": ""
          },
          "menus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuResponse",
              "description": ""
            },
            "description": ""
          }
        }
      },
      "ResponseBodyUserInfoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserInfoResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "PageUserInfoResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfoResponse",
              "description": "Response Data"
            },
            "description": ""
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable",
            "description": ""
          },
          "total": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "empty": {
            "type": "boolean"
          },
          "number": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "number_of_elements": {
            "type": "integer"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort",
              "description": "org.springframework.data.domain.Sort"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "total_pages": {
            "type": "integer"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ResponseBodyPageUserInfoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageUserInfoResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "",
            "minLength": 5,
            "maxLength": 255,
            "format": "email"
          },
          "nickname": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 127
          },
          "password": {
            "type": "string",
            "description": "",
            "minLength": 8,
            "maxLength": 63
          }
        },
        "required": [
          "email",
          "nickname",
          "password"
        ]
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "old_password": {
            "type": "string",
            "description": ""
          },
          "new_password": {
            "type": "string",
            "description": ""
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "",
            "minLength": 5,
            "maxLength": 255,
            "format": "email"
          },
          "nickname": {
            "type": "string",
            "description": "",
            "minLength": 1,
            "maxLength": 127
          }
        },
        "required": [
          "email",
          "nickname"
        ]
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "",
            "minLength": 8,
            "maxLength": 63
          }
        },
        "required": [
          "password"
        ]
      },
      "BatchDeleteUserRequest": {
        "type": "object",
        "properties": {
          "user_id_list": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": ""
          }
        }
      },
      "UserMenuResponse": {
        "type": "object",
        "properties": {
          "menu_id": {
            "type": "string",
            "description": ""
          },
          "code": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "enum": [
              "MENU",
              "FUNCTION"
            ]
          },
          "parent_id": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyListUserMenuResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserMenuResponse",
              "description": ""
            },
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "UserPermissionResponse": {
        "type": "object",
        "properties": {
          "is_has_permission": {
            "type": "boolean",
            "description": ""
          }
        }
      },
      "ResponseBodyUserPermissionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserPermissionResponse",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "UserPermissionRequest": {
        "type": "object",
        "properties": {
          "resource_type": {
            "type": "string",
            "description": "",
            "enum": [
              "ENTITY",
              "DEVICE",
              "INTEGRATION",
              "DASHBOARD",
              "WORKFLOW"
            ]
          },
          "resource_id": {
            "type": "string",
            "description": ""
          }
        }
      },
      "MqttBrokerInfo": {
        "type": "object",
        "properties": {
          "host": {
            "type": [
              "string",
              "null"
            ],
            "description": ""
          },
          "mqtt_port": {
            "type": [
              "integer",
              "null"
            ],
            "description": ""
          },
          "mqtts_port": {
            "type": [
              "integer",
              "null"
            ],
            "description": ""
          },
          "ws_path": {
            "type": [
              "string",
              "null"
            ],
            "description": ""
          },
          "ws_port": {
            "type": [
              "integer",
              "null"
            ],
            "description": ""
          },
          "wss_port": {
            "type": [
              "integer",
              "null"
            ],
            "description": ""
          }
        }
      },
      "ResponseBodyMqttBrokerInfo": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MqttBrokerInfo",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      },
      "WebMqttCredentials": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": ""
          },
          "username": {
            "type": "string",
            "description": ""
          },
          "password": {
            "type": "string",
            "description": ""
          }
        }
      },
      "ResponseBodyWebMqttCredentials": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WebMqttCredentials",
            "description": "Response Data"
          },
          "status": {
            "type": "string",
            "description": "response status"
          },
          "request_id": {
            "type": "string",
            "description": "request id"
          },
          "error_code": {
            "type": "string",
            "description": "Error code (returned only when the response status is Failed)"
          },
          "error_message": {
            "type": "string",
            "description": "Error message (returned only when the response status is Failed)"
          },
          "detail_message": {
            "type": "string",
            "description": "Detailed error description information"
          }
        }
      }
    },
    "securitySchemes": {}
  },
  "servers": [],
  "security": {}
}